package fr.eni.projet_encheres.dal.jdbc;

import fr.eni.projet_encheres.bo.Categorie;
import fr.eni.projet_encheres.dal.DALException;
import fr.eni.projet_encheres.dal.dao.DAOCategorie;
import fr.eni.projet_encheres.dal.ErrorCodesDAL;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;


public class CategorieDAOJdbcImpl implements DAOCategorie {
    /**
     * Insert an instance into the DB and fill this instance with the id generated by mssql server
     * @param  categorie Categorie The instance to insert into the DB
     * @throws DALException if the SQL INSERT request is wrong
     */
    @Override
    public void insert(Categorie categorie) throws DALException {
        Connection cnx = JdbcTools.connect();
        try {
            String INSERT = "INSERT INTO CATEGORIES (libelle) VALUES (?)";
            PreparedStatement stmt = cnx.prepareStatement(INSERT, PreparedStatement.RETURN_GENERATED_KEYS);
            stmt.setString(1, categorie.getLibelle());
            stmt.executeUpdate();
            ResultSet rs = stmt.getGeneratedKeys();
            if (rs.next()) {
                categorie.setNoCategorie(rs.getInt(1));
            }
            cnx.close();
        } catch (SQLException e) {
            e.printStackTrace();
            DALException dalException = new DALException();
            dalException.addError(ErrorCodesDAL.ERROR_SQL_INSERT);
            throw dalException;
        }
    }
    /**
     * Extract data from the DB by id
     * @param id int The id of the categorie to extract from the DB
     * @return categorie An instance of the categorie
     * @throws DALException if the SQL INSERT request is wrong
     */
    @Override
    public Categorie selectById(int id) throws DALException {
        Connection cnx = JdbcTools.connect();
        Categorie categorie = null;
        try {
            String SELECT_BY_ID = "SELECT * FROM CATEGORIES WHERE no_categorie = ?";
            PreparedStatement stmt = cnx.prepareStatement(SELECT_BY_ID);
            stmt.setInt(1, id);
            stmt.execute();
            ResultSet rs = stmt.getResultSet();
            if (rs.next()) {
                categorie = new Categorie(
                        rs.getInt("no_categorie"),
                        rs.getString("libelle")
                );
            }
            cnx.close();
        } catch (SQLException e) {
            e.printStackTrace();
            DALException dalException = new DALException();
            dalException.addError(ErrorCodesDAL.ERROR_SQL_SELECT);
            throw dalException;
        }
        return categorie;
    }
    /**
     * Select all the categories from the DB
     * @return An ArrayList filled with instances of Categorie
     */
    @Override
    public List<Categorie> selectAll() throws DALException {
        Connection cnx = JdbcTools.connect();
        List<Categorie> categories = new ArrayList<>();
        try{
            Statement stmt = cnx.createStatement();
            String SELECT_ALL = "SELECT * FROM CATEGORIES";
            stmt.execute(SELECT_ALL);
            ResultSet rs = stmt.getResultSet();
            while (rs.next()) {
                categories.add(new Categorie(
                        rs.getInt("no_categorie"),
                        rs.getString("libelle")
                ));
            }
            cnx.close();
        } catch (SQLException e) {
            e.printStackTrace();
            DALException dalException = new DALException();
            dalException.addError(ErrorCodesDAL.ERROR_SQL_SELECT);
            throw dalException;
        }
        return categories;
    }

    @Override
    public void update(Categorie categorie) throws DALException {

    }

    @Override
    public void delete(Categorie categorie) throws DALException {

    }
    /**
     * Check in the Database if a libelle is already takeen
     * @param libelleToCheck String The libelle
     * @return boolean true if the libelle is free and false if not
     * @throws DALException If the SQL request is wrong
     */
    public boolean checkForUniqueCategorieLibelle(String libelleToCheck) throws DALException {
        Connection cnx = JdbcTools.connect();
        boolean isUnique = true;
        try {
            String CHECK_IF_LIBELLE_IS_UNIQUE = "SELECT * FROM CATEGORIES WHERE libelle LIKE ?";
            PreparedStatement stmt = cnx.prepareStatement(CHECK_IF_LIBELLE_IS_UNIQUE);
            stmt.setString(1, libelleToCheck);
            stmt.execute();
            ResultSet rs = stmt.getResultSet();
            if (rs.next()) {
                isUnique = false;
            }
            cnx.close();
        } catch (SQLException e) {
            e.printStackTrace();
            DALException dalException = new DALException();
            dalException.addError(ErrorCodesDAL.ERROR_SQL_SELECT);
            throw dalException;
        }
        return isUnique;
    }
}


